{"version":3,"sources":["components/Header/Header.js","components/Instructions/Instructions.js","components/CharacterCard/CharacterCard.js","App.js","index.js"],"names":["Header","react_default","a","createElement","id","Instructions","CharacterCard","props","class","className","data-id","onClick","event","newShuffle","alt","name","src","image","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reshuffle","finalScore","newArray","state","list","newScore","score","i","length","clicked","alert","y","setState","topscore","characters","_this2","shuffledPosts","array","j","Math","floor","random","temp","shuffleArray","components_Header_Header","components_Instructions_Instructions","map","data","components_CharacterCard_CharacterCard","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+9BASeA,MANf,WACI,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACXH,EAAAC,EAAAC,cAAA,iDCIOE,MANf,WACI,OAAOJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACXH,EAAAC,EAAAC,cAAA,+FCSOG,MAXf,SAAuBC,GAEvB,OAAON,EAAAC,EAAAC,cAAA,OAAKK,MAAM,aACVP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iBAAiBC,UAASH,EAAMH,GAAIO,QAAS,SAACC,GAAD,OAAWL,EAAMM,WAAWD,EAAML,EAAMH,MAChGH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACXR,EAAAC,EAAAC,cAAA,OAAKW,IAAKP,EAAMQ,KAAMC,IAAK,UAAYT,EAAMU,mBCuE9CC,cA5Db,SAAAA,EAAYX,GAAM,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMf,KAURmB,UAAY,SAACd,EAAOR,GAIlB,IAHA,IAEIuB,EAFAC,EAAWT,EAAKU,MAAMC,KACtBC,EAAWZ,EAAKU,MAAMG,MAEjBC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACnC,GAAIL,EAASK,GAAT,KAAsB7B,EACxB,GAA+B,UAA3BwB,EAASK,GAAT,QACFF,GAAsB,EACtBH,EAASK,GAAGE,QAAU,WACjB,CACLC,MAAM,aACNT,EAAaI,EACbA,EAAW,EACX,IAAK,IAAIM,EAAI,EAAGA,EAAIT,EAASM,OAAQG,IACnCT,EAASS,GAAT,QAAyB,QAKjClB,EAAKmB,SAAS,CAACN,MAAOD,IAClBZ,EAAKmB,SAAS,CAACR,KAAMF,IACjBD,EAAaR,EAAKU,MAAMU,UAC1BpB,EAAKmB,SAAS,CAACC,SAAUZ,KA/B/BR,EAAKU,MAAQ,CACXC,KAAMU,EACNR,MAAO,EACPO,SAAU,GALIpB,wEAqCT,IAAAsB,EAAAnB,KACDoB,EAlDS,SAAAC,GAEjB,IADA,IAAIV,EAAIU,EAAMT,OACFD,KAAM,CAChB,IAAMW,EAAIC,KAAKC,MAAMD,KAAKE,UAAYd,EAAI,IACpCe,EAAOL,EAAMV,GACnBU,EAAMV,GAAKU,EAAMC,GACjBD,EAAMC,GAAKI,EAEb,OAAOL,EA0CiBM,CAAa3B,KAAKO,MAAMC,MAC9C,OACE7B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACbR,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAWI,MAAM,OAAMP,EAAAC,EAAAC,cAAA,oBAAYmB,KAAKO,MAAMG,OAAW/B,EAAAC,EAAAC,cAAA,wBAAgBmB,KAAKO,MAAMU,WAC5FtC,EAAAC,EAAAC,cAAA,OAAKK,MAAM,YAAYJ,GAAG,kBAAiBH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACvDiC,EAAcU,IAAI,SAAAC,GAAI,OACvBpD,EAAAC,EAAAC,cAACmD,EAAD,CACEzC,WAAY4B,EAAKf,UACjBtB,GAAIiD,EAAKjD,GACTW,KAAMsC,EAAKtC,KACXE,MAAOoC,EAAKpC,MACZkB,QAASkB,EAAKlB,sBApDRoB,IAAMC,WCbxBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.935ab827.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n    return <div id=\"header\">\r\n        <h3>Welcome to the Memory Game!</h3>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Instructions.css\";\r\n\r\nfunction Instructions() {\r\n    return <div id=\"instructions\">\r\n        <h3>Click on image to earn a point, but don't click any image more than once!</h3>\r\n    </div>\r\n}\r\n\r\nexport default Instructions;","import React from \"react\";\r\nimport \"./CharacterCard.css\";\r\n\r\nfunction CharacterCard(props) {\r\n\r\nreturn <div class=\"col l3 m6\">\r\n        <div className=\"character card\" data-id={props.id} onClick={(event) => props.newShuffle(event,props.id)}>\r\n            <div className=\"card-image\">\r\n                <img alt={props.name} src={\"images/\" + props.image}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n}\r\nexport default CharacterCard;","import React from 'react';\r\nimport Header from \"./components/Header/Header\";\r\nimport Instructions from \"./components/Instructions/Instructions\";\r\nimport CharacterCard from './components/CharacterCard/CharacterCard';\r\nimport characters from \"./characters.json\";\r\nimport \"./index.css\";\r\n\r\nvar shuffleArray = array => {\r\n  let i = array.length;\r\n  for (i > 0; i--;) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: characters,\r\n      score: 0,\r\n      topscore: 0\r\n    };\r\n  }\r\n        // take the array, put it on state\r\n        // make a copy of the array on state and manipulate it\r\n        // put new array that's been manipulated back onto state\r\n  reshuffle = (event, id) => {\r\n    let newArray = this.state.list;\r\n    let newScore = this.state.score;\r\n    let finalScore;\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      if (newArray[i][\"id\"] === id) {\r\n        if (newArray[i][\"clicked\"] === \"false\") {\r\n          newScore = newScore + 1;\r\n          newArray[i].clicked = \"true\";\r\n        } else {\r\n          alert(\"You Lose!\");\r\n          finalScore = newScore;\r\n          newScore = 0;\r\n          for (let y = 0; y < newArray.length; y++) {\r\n            newArray[y][\"clicked\"] = \"false\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({score: newScore});\r\n        this.setState({list: newArray});\r\n        if (finalScore > this.state.topscore) {\r\n          this.setState({topscore: finalScore})\r\n        }\r\n  }\r\n\r\n  render() {\r\n    const shuffledPosts = shuffleArray(this.state.list);\r\n    return (\r\n      <div className=\"container-flex\">\r\n        <Header />\r\n        <Instructions />\r\n        <div id=\"scorebox\" class=\"row\"><h5>Score: {this.state.score}</h5><h5>Top Score: {this.state.topscore}</h5></div>\r\n        <div class=\"container\" id=\"characterSpace\"><div className=\"row\">\r\n          {shuffledPosts.map(data => (\r\n          <CharacterCard\r\n            newShuffle={this.reshuffle}\r\n            id={data.id}\r\n            name={data.name}\r\n            image={data.image}\r\n            clicked={data.clicked}\r\n            />\r\n          ))}\r\n          </div></div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}